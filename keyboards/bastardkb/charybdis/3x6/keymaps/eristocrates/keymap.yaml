layout: {qmk_keyboard: bastardkb/charybdis/3x6, qmk_layout: LAYOUT}
layers:
  CISTERN:
  - ['   J', LCAG  Y, LMEH  F, LHYPR D, '   B', {t: ':', s: '::', h: Arcane}, {t: '|', s: '||', h: Arcane}, '   W', RHYPR O, RMEH DT, RCAG  L, {t: QU, h: Q}]
  - ['   M', {t: C, h: Win}, {t: S, h: Alt}, {t: T, h: Ctrl}, {t: N, h: Shift}, {t: '(', s: '{', h: Arcane}, {t: ')', s: '}', h: Arcane}, {t: U, h: Shift}, {t: A, h: Ctrl}, {t: I, h: Alt}, {t: H, h: Win}, '   G']
  - [{t: Leader, s: QMK }, '   P', '   V', '   K', '   X', {t: '\', s: '\\', h: Arcane}, {t: '/', s: '//', h: Arcane}, {t: '=', s: '!='}, {t: '''', s: '"'}, {t: ', ', s: '?' }, '  WH', {t: Vim, s: Genuine, h: Emulation }]
  - [{t: Z, h: Bitwise }, {t: R, h: NGramL }, {t: Space, h: AltishL }, {t: Space, h: AltishR }, {t: E, h: NGramR }]
  TYPINGAME:
  - ['   J', '   Y', '   F', '   D', '   B', {t: ':', s: '::', h: Arcane}, {t: '|', s: '||', h: Arcane}, '   W', '   O', {t: '.', s: '!'}, '   L', '   Q']
  - ['   M', '   C', '   S', '   T', '   N', {t: '(', s: '{', h: Arcane}, {t: ')', s: '}', h: Arcane}, '   U', '   A', '   I', '   H', '   G']
  - [{t: Leader, s: QMK }, '   P', '   V', '   K', '   X', {t: '\', s: '\\', h: Arcane}, {t: '/', s: '//', h: Arcane}, /, {t: '''', s: '"'}, {t: ', ', s: '?' }, ;, {t: Vim, s: Genuine, h: Emulation }]
  - ['   Z', '   R', {t: Space, h: NumPad }, Space, '   E']
  COMBOREF:
  - [{ t: LT OUTR, h: 0 }, { t: LT PNKY, h: 1 }, { t: LT RING, h: 2 }, { t: LT MDLE, h: 3 }, { t: LT INDX, h: 4 }, { t: LT INNR, h: 5 }, { t: RT INNR, h: 6 }, { t: RT INDX, h: 7 }, { t: RT MDLE, h: 8 }, { t: RT RING, h: 9 }, { t: RT PNKY, h: 10 }, { t: RT OUTR, h: 11 }]
  - [{ t: LH OUTR, h: 12 }, { t: LH PNKY, h: 13 }, { t: LH RING, h: 14 }, { t: LH MDLE, h: 15 }, { t: LH INDX, h: 16 }, { t: LH INNR, h: 17 }, { t: RH INNR, h: 18 }, { t: RH INDX, h: 19 }, { t: RH MDLE, h: 20 }, { t: RH RING, h: 21 }, { t: RH PNKY, h: 22 }, { t: RH OUTR, h: 23 }]
  - [{ t: LB OUTR, h: 24 }, { t: LB PNKY, h: 25 }, { t: LB RING, h: 26 }, { t: LB MDLE, h: 27 }, { t: LB INDX, h: 28 }, { t: LB INNR, h: 29 }, { t: RB INNR, h: 30 }, { t: RB INDX, h: 31 }, { t: RB MDLE, h: 32 }, { t: RB RING, h: 33 }, { t: RB PNKY, h: 34 }, { t: RB OUTR, h: 35 }]
  - [{ t: L LTHMB, h: 36 }, { t: L MTHMB, h: 37 }, { t: L RTHMB, h: 38 }, { t: R LTHMB, h: 39 }, { t: R MTHMB, h: 40 }]
  SLICE:
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - SL INDX
    - SL MDLE
    - SL RING
    - SL PNKY
    - SL STEP
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  VIMFIGHTER:
  - ['', '', '', '', '', '', {t: QuoMark, h: Attack }, {t: Fold, h: Attack }, {t: Search, h: Attack }, {t: Vertical, h: Attack }, {t: Format, h: Attack }, {t: GrvMark, h: Attack }]
  - ['', '', Back, Crouch, Forward, '', {t: Horizontal, h: Attack }, {t: Left, h: Attack }, {t: Down, h: Attack }, {t: Up, h: Attack }, {t: Right, h: Attack }, '']
  - - ''
    - ''
    - ''
    - ''
    - ''
    - ''
    - {t: Visual, h: Attack }
    - {t: Yank, h: Attack }
    - {t: Change, h: Attack }
    - {t: Delete, h: Attack }
    - ''
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - Jump
    - {t: ▽, type: trans}
    - {t: Vim Fighter, h: TO Layer }
    - {t: Neutral, h: Attack }
  SHIFTISHL:
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: '-', s: '--'}
    - Skip gram
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: '.', s: Adaptive, h: Capsword}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: C, h: Win}
    - {t: S, h: Alt}
    - {t: T, h: Ctrl}
    - {t: N, h: Shift}
    - {t: '[', s: '/*'}
    - Skip gram
    - {t: U, h: Shift}
    - {t: A, h: Ctrl}
    - {t: I, h: Alt}
    - {t: H, h: Win}
    - {t: ▽, type: trans}
  - - Caps Lock
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: '<', s: '<<'}
    - {t: Context, s: Windows, h: Menu }
    - {t: '<=', s: '<=='}
    - {t: "`", s: "```"}
    - {t: ', ', s: Adaptive, h: OSM Shift }
    - ''
    - {t: ▽, type: trans}
  - - ''
    - {t: ▽, type: trans}
    - ''
    - _
    - {t: ▽, type: trans}
  SHIFTISHR:
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - Skip gram
    - {t: '+', s: '++'}
    - Home
    - Page Down
    - Page Up
    - End
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: C, h: Win}
    - {t: S, h: Alt}
    - {t: T, h: Ctrl}
    - {t: N, h: Shift}
    - Skip gram
    - {t: ']', s: '*/'}
    - H
    - J
    - K
    - L
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - Print Screen
    - {t: '>', s: '>>'}
    - LEFT
    - DOWN
    - UP
    - RIGHT
    - {t: ▽, type: trans}
  - - ''
    - {t: ▽, type: trans}
    - _
    - ''
    - {t: ▽, type: trans}
  ALTISHL:
  - ['', '', '', '', '', '', '', '', '', ;, '', '']
  - ['', '', '', '', '', '(?<=)', '(?!)', {t: Shift, s: OneShot }, {t: Control, s: OneShot }, {t: Alt, s: OneShot }, {t: Win, s: OneShot }, .gov]
  - [{t: Aware, s: Conntext, h: Assistant }, '', '', '', '', '', '%', {t: '==', s: '!=='}, '', {t: '&', s: '&&' }, '', {t: Context, s: Windows, h: Menu }]
  - - ''
    - ''
    - {t: ▽, type: trans}
    - {t: Space, h: AltishR }
    - '*'
  ALTISHR:
  - ['', '', '', '', '', '(?:)', '', '', '', ~/, '', '']
  - ['', .com, $, '', '', '(?<!)', '(?=)', '', '@', '', '#', '']
  - ['', '', ^, '', '', '', {t: '\/', s: '/>' }, {t: '===', s: '!==='}, '', '', '', '']
  - - ''
    - {t: '-', s: '--'}
    - {t: Space, h: AltishL }
    - {t: ▽, type: trans}
    - ''
  ALTISHB:
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - '~'
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - '...'
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - '{{/*'
    - /*}}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - :=
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  BITNUM:
  - ['', '', '', R, '', {t: ', ', s: '?' }, '%', '', '', '', '', '']
  - [TD(TBW), BIN 512, BIN 256, BIN 128, BIN  64, {t: '=', s: '!='}, '00', BIN   8, BIN   4, BIN   2, BIN   1, '0']
  - [Layer Lock, /, '*', {t: '-', s: '--'}, PLS FUN, ., $, {t: Shift, s: OneShot }, {t: Control, s: OneShot }, {t: Alt, s: OneShot }, {t: Win, s: OneShot }, BASE]
  - - {t: ▽, type: trans}
    - BIN  32
    - Space
    - Space
    - BIN  16
  BITFUNC:
  - ['', '', '', '', '', {t: ', ', s: '?' }, '%', '', '', '', '', '']
  - [TD(TBW), BIN 512, BIN 256, BIN 128, BIN  64, {t: '=', s: '!='}, '00', F0b8, F0b4, F0b2, F0b1, '0']
  - - Layer Lock
    - /
    - '*'
    - {t: '-', s: '--'}
    - {t: ▽, type: trans}
    - .
    - $
    - {t: Shift, s: OneShot }
    - {t: Control, s: OneShot }
    - {t: Alt, s: OneShot }
    - {t: Win, s: OneShot }
    - BASE
  - - {t: ▽, type: trans}
    - BIN  32
    - Space
    - Space
    - F0b16
  NUMPAD:
  - ['', Layer Lock, Print Screen, Scroll Lock, Pause, {t: ', ', s: '?' }, '%', '7', '8', '9', Enter, '']
  - [BSPC, /, Insert, Home, Page Up, {t: '=', s: '!='}, $, '4', '5', '6', '*', '']
  - [Layer Lock, {t: '-', s: '--'}, Delete, End, Page Down, ., '00', '1', '2', '3', {t: '+', s: '++'}, BASE]
  - ['', '', Space, Space, '0']
  POINTER:
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: Sniping, h: MO }
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - '   V'
    - '   K'
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - Double Click
    - Left Click
    - Right Click
    - Drag Scroll
    - Scroll Wheel Click
    - {t: Yomitan Scan, h: TG }
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: Space, h: AltishR }
    - {t: Pointer Options, h: OS Layer }
  POINTEROPT:
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - '   V'
    - '   K'
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - Snipe DPI Down
    - DPI Down
    - DPI Up
    - Snipe DPI Up
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  MEDIA:
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - Launch Media Player
    - Previous Track
    - Brightness Down
    - Brightness Up
    - Next Track
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - Play/ Pause Track
    - Previous Track
    - Volume Down
    - Volume Up
    - Next Track
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - Stop Track
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - Mute
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  ONESHOT:
  - ['', '', '', '', '', '', '', '', '', '', '', '']
  - ['', MEDIA, KEYBRD, MATH, SHRTCUT, '', '', '', '', '', '', '']
  - [RANDOM, '', '', '', '', '', '', '', '', '', '', '']
  - - {t: ▽, type: trans}
    - ''
    - ''
    - ''
    - ''
  GAME:
  - ['1', Q, I, W, R, T, Y, U, I, O, P, '']
  - [LCTL, A, A, S, D, G, H, J, K, L, ;, RCTL]
  - [LSFT, PT Z, M, C, V, B, N, M, {t: ', ', s: '?' }, {t: '.', s: '!'}, PT SLSH, BASE]
  - [ESC, Space, '', '', ENT]
  THINQU:
  - [TAB, B, D, L, TH, V, Z, {t: '''', s: '"'}, U, H, K, '']
  - [BSPC, N, T, S, R, W, Y, A, E, O, I, ENT]
  - [LSFT, X, G, M, C, ;, J, F, P, {t: ', ', s: '?' }, {t: '.', s: '!'}, BASE]
  - ['', THINQUL, Space, Space, THINQUR]
  THINQUL:
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  THINQUR:
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  KEYBOARD:
  - - {t: ▽, type: trans}
    - TYPING
    - QWERTY
    - THINQU
    - GAME
    - {t: ▽, type: trans}
    - RGB TOG
    - RGB HUI
    - RGB SAI
    - RGB VAI
    - RGB SPI
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - RGB RMOD
    - RGB HUD
    - RGB SAD
    - RGB VAD
    - RGB SPD
    - RGB MOD
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - RGB MDE
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - BASE
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  SECRET:
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - BASE
  - - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - {t: ▽, type: trans}
    - SECRET1
    - SECRET2
  NAGINATA:
  - ['', '', '', '', '', '', '', '', '', '', '', '']
  - ['', '', '', '', '', '', '', '', '', '', '', '']
  - ['', '', '', '', '', '', '', '', '', '', '', '']
  - ['', '', '', '', '']
  SHINGETA:
  - ['', '', '', '', '', '', '', '', '', '', '', '']
  - ['', '', '', '', '', '', '', '', '', '', '', '']
  - ['', '', '', '', '', '', '', '', '', '', '', '']
  - ['', '', '', '', '']
  QWERTY:
  - [LGUI, Q, W, E, R, T, Y, U, I, O, P, RGUI]
  - [LCTL, A, S, D, F, G, H, J, K, L, ;, RCTL]
  - [LSFT, PT Z, X, C, V, B, N, M, {t: ', ', s: '?' }, {t: '.', s: '!'}, PT SLSH, BASE]
  - ['', Space, BSPC, Delete, ENT]
  RANDOM:
  - [RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND]
  - [RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND]
  - [RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, RAND, BASE]
  - [RAND, RAND, RAND, RAND, RAND]
  TEST:
    - ['   J', LCAG  Y, LMEH  F, LHYPR D, '   B', {t: ':', s: '::', h: Arcane}, {t: '|', s: '||', h: Arcane}, '   W', RHYPR O, RMEH DT, RCAG  L, {t: QU, h: Q}]
    - ['   M', {t: C, h: Win}, {t: S, h: Alt}, {t: T, h: Ctrl}, {t: N, h: Shift}, {t: '(', s: '{', h: Arcane}, {t: ')', s: '}', h: Arcane}, {t: U, h: Shift}, {t: A, h: Ctrl}, {t: I, h: Alt}, {t: H, h: Win}, '   G']
    - [{t: Leader, s: QMK }, '   P', '   V', '   K', '   X', {t: '\', s: '\\', h: Arcane}, {t: '/', s: '//', h: Arcane}, {t: '=', s: '!='}, {t: '''', s: '"'}, {t: ', ', s: '?' }, '  WH', {t: Vim, s: Genuine, h: Emulation }]
    - [{t: Z, h: Bitwise }, {t: R, h: NGramL }, {t: Space, h: AltishL }, {t: Space, h: AltishR }, {t: E, h: NGramR }]
combos:

  - { l: [VIMFIGHTER], p: [40, 32], k: Vert Attack, a: top, o: 0.102, s: -0.00010404 }
  - { l: [VIMFIGHTER], p: [31, 33], k: Hori Attack, a: bottom, o: 0.202, s: -0.00081608 }
  - { l: [VIMFIGHTER], p: [34, 40], k: Yank Attack, a: left, o: 0.302, s: -0.00273612 }
  - { l: [VIMFIGHTER], p: [34, 31], k: Change Attack, a: right, o: 0.402, s: -0.00646416 }
  - { l: [VIMFIGHTER], p: [34, 32], k: Delete Attack, a: top, o: 0.54515, s: 0.014859426125 }
  - { l: [VIMFIGHTER], p: [34, 33], k: Visual Attack, a: bottom, o: 0.64515, s: 0.02497311135 }
  - { l: [VIMFIGHTER], p: [40, 31], k: QuoMark Attack, a: left, o: 0.74515, s: 0.038867396575 }
  - { l: [VIMFIGHTER], p: [40, 33], k: GrvMark Attack, a: right, o: 0.84515, s: 0.0571422818 }
  - { l: [VIMFIGHTER], p: [32, 31], k: Fold Attack, a: top, o: 2.102, s: -0.39765636 }
  - { l: [VIMFIGHTER], p: [32, 33], k: Search Attack, a: bottom, o: 2.202, s: -0.4848804 }
  - { l: [VIMFIGHTER], p: [31, 32, 33], k: Format Attack, a: left, o: 2.302, s: -0.58291244 }
